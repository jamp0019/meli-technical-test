server:
  port: 8090
#spring.redis.host: 127.0.0.1
#spring.redis.port: 6379
spring:
  application:
    name: proxy
  cloud:
    gateway:
      routes:
        - id: ap1-service
          uri: lb://api1
          predicates:
            - Path=/api1-service/**
          filters:
          #- name: CustomGatewayFilterFactory
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 2
              redis-rate-limiter.burstCapacity: 4
              redis-rate-limiter.requestedTokens: 1
              key-resolver: "#{@ProxyClientAddressResolver}"
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 2
              redis-rate-limiter.burstCapacity: 4
              redis-rate-limiter.requestedTokens: 1
              key-resolver: "#{@ProxyClientPathResolver}"
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 2
              redis-rate-limiter.burstCapacity: 4
              redis-rate-limiter.requestedTokens: 1
              key-resolver: "#{@ProxyClientAddressAndPathResolver}"
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 2
              redis-rate-limiter.burstCapacity: 4
              redis-rate-limiter.requestedTokens: 1
              key-resolver: "#{@ProxyClientTokenResolver}"
        - id: ap2-service
          #uri: http://localhost:8082/
          uri: lb://api2
          predicates:
            - Path=/api2-service/**
          filters:
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 2
              redis-rate-limiter.burstCapacity: 4
              redis-rate-limiter.requestedTokens: 1
              key-resolver: "#{@ProxyClientAddressResolver}"
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 2
              redis-rate-limiter.burstCapacity: 4
              redis-rate-limiter.requestedTokens: 1
              key-resolver: "#{@ProxyClientPathResolver}"
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 2
              redis-rate-limiter.burstCapacity: 4
              redis-rate-limiter.requestedTokens: 1
              key-resolver: "#{@ProxyClientAddressAndPathResolver}"
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 2
              redis-rate-limiter.burstCapacity: 4
              redis-rate-limiter.requestedTokens: 1
              key-resolver: "#{@ProxyClientTokenResolver}"
eureka:
  client:
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
management:
  endpoints:
    web:
      exposure:
        include: '*'